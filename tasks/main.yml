- name: Delete root pw file /root/.pw (if present)
  file:
    path: /root/.pw
    state: absent

- name: Update APT package cache
  apt:
    update_cache: true
    cache_valid_time: 3600
  tags:
    - apt

- name: Upgrade APT to the latest packages
  apt:
    upgrade: safe

- name: Set language
  locale_gen:
    name: "{{harden_linux_language}}"
    state: present

- name: Remove german language (for netcup servers)
  locale_gen:
    name: de_DE.UTF-8
    state: absent

- name: Install required packages
  apt:
    state: present
    pkg: "{{harden_linux_required_packages}}"
  tags:
    - ufw

- name: Add users
  user:
    name: "{{ item.name }}"
    password: "{{ lookup('password', 'credentials/' + item.name + '-password.txt encrypt=md5_crypt') }}"
    shell: "{{ item.shell | default(harden_linux_default_shell) }}"
    update_password: on_create
    state: present
  loop: "{{ harden_linux_users }}"
  tags:
    - user

- name: Add authorized keys for users from Github
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('url', 'https://github.com/'+item.github_user+'.keys') }}"
  loop: "{{ harden_linux_users }}"
  when: item.github_user is defined
  tags:
    - user

- name: Add authorized keys for users from file
  authorized_key:
    user: "{{ item.name }}"
    keys: "{{ lookup('file', item.key_file) }}"
  loop: "{{ harden_linux_users }}"
  when: item.key_file is defined
  tags:
    - user

- name: Add users to sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: "{{item.name}} ALL"
    line: "{{item.name}} ALL=(ALL) NOPASSWD:ALL"
    state: present
  loop: "{{ harden_linux_users }}"
  tags:
    - user
    - sudo

- name: Adjust APT update intervals
  copy:
    src: etc/apt/apt.conf.d/10periodic
    dest: /etc/apt/apt.conf.d/10periodic
    owner: root
    group: root
    mode: 0644
  tags:
    - apt

- name: Combine harden_linux_sshd_settings and harden_linux_sshd_settings_user (if defined)
  set_fact:
    harden_linux_sshd_settings: "{{harden_linux_sshd_settings | combine(harden_linux_sshd_settings_user|default({})) }}"
  tags:
    - ssh

- name: Ensure sshd_config setting
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{item}}"
    line: "{{harden_linux_sshd_settings[item]}}"
    state: "present"
  notify: "restart ssh"
  with_items:
    - "{{harden_linux_sshd_settings | list}}"
  tags:
    - ssh

- name: Combine harden_linux_sysctl_settings and harden_linux_sysctl_settings_user (if defined)
  set_fact:
    harden_linux_sysctl_settings: "{{harden_linux_sysctl_settings | combine(harden_linux_sysctl_settings_user|default({})) }}"
  tags:
    - sysctl

- name: Sysctl settings
  sysctl:
    name: "{{item}}"
    value: "{{harden_linux_sysctl_settings[item]}}"
    sysctl_set: yes
  with_items:
    - "{{harden_linux_sysctl_settings | list}}"
  tags:
    - sysctl

- name: Combine harden_linux_ufw_defaults and harden_linux_ufw_defaults_user (if defined)
  set_fact:
    harden_linux_ufw_defaults: "{{harden_linux_ufw_defaults | combine(harden_linux_ufw_defaults_user|default({})) }}"
  tags:
    - ufw

- name: UFW - Configure defaults
  lineinfile:
    dest: /etc/default/ufw
    regexp: "{{item}}"
    line: "{{harden_linux_ufw_defaults[item]}}"
    state: present
  notify: "reload ufw"
  with_items:
    - "{{harden_linux_ufw_defaults | list}}"
  tags:
    - ufw

- name: UFW - Apply firewall rules
  ufw:
    rule: "{{item.rule}}"
    interface: "{{item.interface | default('')}}"
    direction: "{{item.direction | default('in')}}"
    from_ip: "{{item.from_ip | default('any')}}"
    to_ip: "{{item.to_ip | default('any')}}"
    from_port: "{{item.from_port | default('')}}"
    to_port: "{{item.to_port | default('')}}"
    protocol: "{{item.protocol | default('any')}}"
    log: "{{item.log | default(False)}}"
  with_items: "{{harden_linux_ufw_rules}}"
  tags:
    - ufw
    - ufwrules

- name: UFW - Allow configured networks to communicate
  ufw:
    rule: allow
    src: "{{item}}"
  with_items:
    - "{{harden_linux_ufw_allow_networks}}"
  when: harden_linux_ufw_allow_networks is defined
  tags:
    - ufw

- name: UFW - Setup logging
  ufw:
    logging: "{{harden_linux_ufw_logging}}"
  tags:
    - ufw

- name: UFW - Enable firewall/iptables
  ufw:
    state: enabled
  tags:
    - ufw

- name: Change root password
  user:
    name: "root"
    password: "{{harden_linux_root_password}}"
  when: harden_linux_root_password is defined
  tags:
    - user

- name: Journald SystemMaxFileSize
  lineinfile:
    path: "/etc/systemd/journald.conf"
    line: "SystemMaxFileSize={{ harden_linux_max_logfile_size }}"
    regexp: ".?SystemMaxFileSize.*"
    state: present
  tags:
    - journal

- name: Journald SystemMaxUse
  lineinfile:
    path: "/etc/systemd/journald.conf"
    line: "SystemMaxUse={{ harden_linux_system_log_size }}"
    regexp: ".?SystemMaxUse.*"
    state: present
  tags:
    - journal
